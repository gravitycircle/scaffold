/* BREAKPOINTS */
$bpmax : 399px, 767px, 1024px, 1199px, 1599px, 1999px, false;
$bpmin : false, 400px, 768px, 1025px, 1200px, 1600px, 2000px;
/* --- */

@mixin zoom($attr, $v, $pr: false)
{
	//set multipliers
	@include upScale($attr, zoomFactor(1, $v), zoomFactor(2, $v), zoomFactor(3, $v), zoomFactor(4, $v), zoomFactor(5, $v), zoomFactor(6, $v), zoomFactor(7, $v), $pr);
}

@function zoomFactor($bp, $v){
	@if $bp == 1 {
		@return $v * 0.7;
	}
	@else if $bp == 2 {
		@return $v * 0.75;
	}
	@else if $bp == 3 {
		@return $v * 0.75;
	}
	@else if $bp == 4 {
		@return $v * 0.8;
	}
	@else if $bp == 5 {
		@return $v * 0.82;
	}
	@else if $bp == 6 {
		@return $v * 1;
	}
	@else if $bp == 7 {
		@return $v * 1;
	}
	@else {
		@return $v;
	}
}

@mixin dimensions($width, $height: false){
	@if $height == false{
		width: $width;
		height: $width;
	}
	@else{
		width: $width;
		height: $height;
	}
}

@mixin print{
	@media print { 
		@content;
	}
}

@mixin screen($min: false, $max: false){
	@if $min == false and $max != false{
		@media only screen and (max-width: $max) {
			@content;
		}
	}
	@else if $min != false and $max == false{
		@media only screen and (min-width: $min) {
			@content;
		}
	}
	@else if $min != false and $max != false{
		@media only screen and (min-width: $min) and (max-width: $max) {
			@content;
		}
	}
}

@mixin breakpoint($limit: false, $number: 1) {
	@if $limit == false{
		@content;
	}
	@else {
		@if $limit == 'min' {
			@if $number == 1{
				@content;
			}
			@else if $number < 8 and $number > 1{
				@media only screen and (min-width: nth($bpmin, $number)){
					@content;
				}
			}
			@else {
				@content;
			}
		}
		@else if $limit == 'max' {
			@if $number == 7{
				@content;
			}
			@else if $number < 7 and $number > 0{
				@media only screen and (max-width: nth($bpmax, $number)){
					@content;
				}
			}
			@else {
				@content;
			}
		}
		@else {
			@if $number == 1{
				@media only screen and (max-width: nth($bpmax, 1)) {
					@content;
				}
			}
			@else if $number == 7{
				@media only screen and (min-width: nth($bpmin, 7)) {
					@content;
				}
			}
			@else if $number > 1 and $number < 7 {
				@media only screen and (min-width: nth($bpmin, $number)) and (max-width: nth($bpmax, $number)) {
					@content;
				}
			}
			@else{
				@content;
			}
		}
	}
}

@mixin orientation($orient: false, $style: normal)
{
	@if $orient == false{
		@content;
	}
	@else if $orient == 'portrait' {
		@if $style == normal {
			@include breakpoint(max, 3){
				@media only screen and (orientation: portrait) {
					@content;
				}
			}
		}
		@else {
			@media only screen and (orientation: portrait) {
				@content;
			}
		}
	}
	@else if $orient == 'landscape' {
		@if $style == normal {
			@include breakpoint(max, 3){
				@media only screen and (orientation: landscape) {
					@content;
				}
			}
		}
		@else {
			@media only screen and (orientation: landscape) {
				@content;
			}
		}
	}
	@else {
		@content;
	}
}

@mixin hide($bp...) {
	@each $break in $bp{
		@if $break > 0 and $break < 8 {
			@include breakpoint(only, $break) {
				display: none;
			}
		}
	}
}

@mixin upScale($property, $bp1: false, $bp2: false, $bp3: false, $bp4: false, $bp5: false, $bp6: false, $bp7: false, $prefix: false){
	//going up
	@if $bp1 != false {
		@include breakpoint(min, 1) {
			@if $prefix != false{
				-webkit-#{$property} : $bp1;
				-moz-#{$property} : $bp1;
				-o-#{$property} : $bp1;
				-ms-#{$property} : $bp1;
			}
			#{$property} : $bp1;
		}
	}

	@if $bp2 != false {
		@include breakpoint(min, 2) {
			@if $prefix != false{
				-webkit-#{$property} : $bp2;
				-moz-#{$property} : $bp2;
				-o-#{$property} : $bp2;
				-ms-#{$property} : $bp2;
			}
			#{$property} : $bp2;
		}
	}

	@if $bp3 != false {
		@include breakpoint(min, 3) {
			@if $prefix != false{
				-webkit-#{$property} : $bp3;
				-moz-#{$property} : $bp3;
				-o-#{$property} : $bp3;
				-ms-#{$property} : $bp3;
			}
			#{$property} : $bp3;
		}
	}

	@if $bp4 != false {
		@include breakpoint(min, 4) {
			@if $prefix != false{
				-webkit-#{$property} : $bp4;
				-moz-#{$property} : $bp4;
				-o-#{$property} : $bp4;
				-ms-#{$property} : $bp4;
			}
			#{$property} : $bp4;
		}
	}

	@if $bp5 != false {
		@include breakpoint(min, 5) {
			@if $prefix != false{
				-webkit-#{$property} : $bp5;
				-moz-#{$property} : $bp5;
				-o-#{$property} : $bp5;
				-ms-#{$property} : $bp5;
			}
			#{$property} : $bp5;
		}
	}

	@if $bp6 != false {
		@include breakpoint(min, 6) {
			@if $prefix != false{
				-webkit-#{$property} : $bp6;
				-moz-#{$property} : $bp6;
				-o-#{$property} : $bp6;
				-ms-#{$property} : $bp6;
			}
			#{$property} : $bp6;
		}
	}

	@if $bp7 != false {
		@include breakpoint(min, 7) {
			@if $prefix != false{
				-webkit-#{$property} : $bp7;
				-moz-#{$property} : $bp7;
				-o-#{$property} : $bp7;
				-ms-#{$property} : $bp7;
			}
			#{$property} : $bp7;
		}
	}
}

@mixin downScale($property, $bp7: false, $bp6: false, $bp5: false, $bp4: false, $bp3: false, $bp2: false, $bp1: false, $prefix: false){
	//going down

	@if $bp7 != false {
		@include breakpoint(max, 7) {
			@if $prefix != false{
				-webkit-#{$property} : $bp7;
				-moz-#{$property} : $bp7;
				-o-#{$property} : $bp7;
				-ms-#{$property} : $bp7;
			}
			#{$property} : $bp7;
		}
	}

	@if $bp6 != false {
		@include breakpoint(max, 6) {
			@if $prefix != false{
				-webkit-#{$property} : $bp6;
				-moz-#{$property} : $bp6;
				-o-#{$property} : $bp6;
				-ms-#{$property} : $bp6;
			}
			#{$property} : $bp6;
		}
	}

	@if $bp5 != false {
		@include breakpoint(max, 5) {
			@if $prefix != false{
				-webkit-#{$property} : $bp5;
				-moz-#{$property} : $bp5;
				-o-#{$property} : $bp5;
				-ms-#{$property} : $bp5;
			}
			#{$property} : $bp5;
		}
	}

	@if $bp4 != false {
		@include breakpoint(max, 4) {
			@if $prefix != false{
				-webkit-#{$property} : $bp4;
				-moz-#{$property} : $bp4;
				-o-#{$property} : $bp4;
				-ms-#{$property} : $bp4;
			}
			#{$property} : $bp4;
		}
	}

	@if $bp3 != false {
		@include breakpoint(max, 3) {
			@if $prefix != false{
				-webkit-#{$property} : $bp3;
				-moz-#{$property} : $bp3;
				-o-#{$property} : $bp3;
				-ms-#{$property} : $bp3;
			}
			#{$property} : $bp3;
		}
	}

	@if $bp2 != false {
		@include breakpoint(max, 2) {
			@if $prefix != false{
				-webkit-#{$property} : $bp2;
				-moz-#{$property} : $bp2;
				-o-#{$property} : $bp2;
				-ms-#{$property} : $bp2;
			}
			#{$property} : $bp2;
		}
	}

	@if $bp1 != false {
		@include breakpoint(max, 1) {
			@if $prefix != false{
				-webkit-#{$property} : $bp1;
				-moz-#{$property} : $bp1;
				-o-#{$property} : $bp1;
				-ms-#{$property} : $bp1;
			}
			#{$property} : $bp1;
		}
	}
}

@mixin mScrollFix{
	@content;
	-webkit-overflow-scrolling: touch;
}

@mixin clearFix{
	&::after{
		content: '';
		width: 100%;
		height: 0;
		display: block;
		clear: both;
	}
}

@mixin verticalCenter($x: -50%, $y: -50%){
	position: absolute;
	@include prefix(transform, translate($x, $y));
	top: 50%;
	left: 50%;
}

@mixin prefix($property, $value)
{
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-o-#{$property}: $value;
	-ms-#{$property}: $value;
	#{$property}: $value;
}

@mixin calc-vh($property, $value){
	#{$property} : $value+vh;
	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:portrait){
		#{$property}: ($value/100) * 1024px;
	}

	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:landscape){
		#{$property}: ($value/100) * 768px;
	}
	
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:portrait){
		#{$property}: ($value/100) * 480px;
	}

	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:landscape){
		#{$property}: ($value/100) * 320px;
	}
	
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:portrait){
		#{$property}: ($value/100) * 568px;
	}

	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:landscape){
		#{$property}: ($value/100) * 320px;
	}
	
	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:portrait){
		#{$property}: ($value/100) * 667px;
	}

	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:landscape){
		#{$property}: ($value/100) * 375px;
	}
}

@mixin calc-vw($property, $value){
	#{$property} : $value+vw;
	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:portrait){
		#{$property}: ($value/100) * 768px;
	}

	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:landscape){
		#{$property}: ($value/100) * 1024px;
	}
	
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:portrait){
		#{$property}: ($value/100) * 320px;
	}

	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:landscape){
		#{$property}: ($value/100) * 480px;
	}
	
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:portrait){
		#{$property}: ($value/100) * 320px;
	}

	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:landscape){
		#{$property}: ($value/100) * 568px;
	}
	
	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:portrait){
		#{$property}: ($value/100) * 375px;
	}

	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:landscape){
		#{$property}: ($value/100) * 667px;
	}
}

@mixin transition($what...)
{
  -webkit-transform: translateZ(0);
   -moz-transform: translateZ(0);
   -ms-transform: translateZ(0);
   -o-transform: translateZ(0);
   transform: translateZ(0);

   -webkit-backface-visibility: hidden;
   -moz-backface-visibility: hidden;
   -ms-backface-visibility: hidden;
   backface-visibility: hidden;

   -webkit-perspective: 1000;
   -moz-perspective: 1000;
   -ms-perspective: 1000;
   perspective: 1000;

  @if $what == 'auto' {
    
    -moz-transition-property : all;
    -webkit-transition-property : all;
    -o-transition-property : all;
    -ms-transition-property : all;
    transition-property : all;

   } @else {
   
    -moz-transition-property : $what;
    -webkit-transition-property : $what;
    -o-transition-property : $what;
    -ms-transition-property : $what;
    transition-property : $what;
   }
}

@mixin transition_pure($what...)
{
   -webkit-backface-visibility: hidden;
   -moz-backface-visibility: hidden;
   -ms-backface-visibility: hidden;
   backface-visibility: hidden;

   -webkit-perspective: 1000;
   -moz-perspective: 1000;
   -ms-perspective: 1000;
   perspective: 1000;

  @if $what == 'auto' {
    
    -moz-transition-property : all;
    -webkit-transition-property : all;
    -o-transition-property : all;
    -ms-transition-property : all;
    transition-property : all;

   } @else {
   
    -moz-transition-property : $what;
    -webkit-transition-property : $what;
    -o-transition-property : $what;
    -ms-transition-property : $what;
    transition-property : $what;
   }
}

@mixin duration($what)
{
  -moz-transition-duration : $what;
  -webkit-transition-duration : $what;
  -o-transition-duration : $what;
  -ms-transition-duration : $what;
  transition-duration : $what;
}

@mixin timing($what)
{
  -moz-transition-timing-function : curve($what);
  -webkit-transition-timing-function : curve($what);
  -o-transition-timing-function : curve($what);
  -ms-transition-timing-function : curve($what);
  transition-timing-function : curve($what);
}

@function curve($what){
  @if $what == 'snap'{
    @return cubic-bezier(0.000, 0.700, 0.285, 1.000)
  }
  @else if $what == 'sine'{
    @return cubic-bezier(0.39, 0.575, 0.565, 1)
  }
  @else if $what == 'bounce'{
    @return cubic-bezier(0.050, 0.385, 0.000, 1.220)
  }
  @else if $what == 'fall'{
    @return cubic-bezier(0.630, 0.040, 0.835, 0.560)
  }
  @else{
    @return $what
  }
}

@mixin animate($kiframes, $duration, $delay, $iterations, $timing, $direction) {
  @include prefix(animation-name, $kiframes);
  @include prefix(animation-duration, $duration);
  @include prefix(animation-timing-function, curve($timing));
  @include prefix(animation-iteration-count, $iterations);
  @include prefix(animation-direction, $direction);

  @if $delay != false{
    @include prefix(animation-delay, $delay);
  }
}

@mixin keyframes($name) {
  @-moz-keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin col($n){
	width: ($n/12) * 100%;
}

@mixin mrg($n){
	margin-left: ($n/12) * 100%;
}

@mixin rmrg($n){
	margin-right: ($n/12) * 100%;
}

html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield;
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0;
  padding: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
*:before,
*:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
html {
  font-size: 10px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.42857143;
  color: #333333;
  background-color: #ffffff;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
a {
  text-decoration: none;
}
a:hover,
a:focus {
  text-decoration: none;
}
a:focus {
  outline: thin dotted;
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
figure {
  margin: 0;
}
img {
  vertical-align: middle;
}

.container {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-left: 15px;
  padding-right: 15px;
}
.row {
  margin-left: -15px;
  margin-right: -15px;
}
.col-xs-1, .col-ph-1, .col-sm-1, .col-md-1, .col-lg-1, .col-hd-1, .col-qd-1, .col-xs-2, .col-ph-2, .col-sm-2, .col-md-2, .col-lg-2, .col-hd-2, .col-qd-2, .col-xs-3, .col-ph-3, .col-sm-3, .col-md-3, .col-lg-3, .col-hd-3, .col-qd-3, .col-xs-4, .col-ph-4, .col-sm-4, .col-md-4, .col-lg-4, .col-hd-4, .col-qd-4, .col-xs-5, .col-ph-5, .col-sm-5, .col-md-5, .col-lg-5, .col-hd-5, .col-qd-5, .col-xs-6, .col-ph-6, .col-sm-6, .col-md-6, .col-lg-6, .col-hd-6, .col-qd-6, .col-xs-7, .col-ph-7, .col-sm-7, .col-md-7, .col-lg-7, .col-hd-7, .col-qd-7, .col-xs-8, .col-ph-8, .col-sm-8, .col-md-8, .col-lg-8, .col-hd-8, .col-qd-8, .col-xs-9, .col-ph-9, .col-sm-9, .col-md-9, .col-lg-9, .col-hd-9, .col-qd-9, .col-xs-10, .col-ph-10, .col-sm-10, .col-md-10, .col-lg-10, .col-hd-10, .col-qd-10, .col-xs-11, .col-ph-11, .col-sm-11, .col-md-11 .col-lg-11, .col-hd-11, .col-qd-11, .col-xs-12, .col-ph-12, .col-sm-12, .col-md-12, .col-lg-12, .col-hd-12, .col-qd-12{
  position: relative;
  min-height: 1px;
  padding-left: 15px;
  padding-right: 15px;
  float: left;

	&.col-xs-block{
		float: none;
		clear: both;
	}
	
	@include breakpoint(min, 2){
		&.col-ph-block{
			float: none;
			clear: both;
		}
	}

	@include breakpoint(min, 3){
		&.col-sm-block{
			float: none;
			clear: both;
		}
	}

	@include breakpoint(min, 4){
		&.col-md-block{
			float: none;
			clear: both;
		}
	}

	@include breakpoint(min, 5){
		&.col-lg-block{
			float: none;
			clear: both;
		}
	}

	@include breakpoint(min, 6){
		&.col-hd-block{
			float: none;
			clear: both;
		}
	}

	@include breakpoint(min, 7){
		&.col-qd-block{
			float: none;
			clear: both;
		}
	}
}

.col-xs-1{
	@include col(1);
}

.col-xs-2{
	@include col(2);
}

.col-xs-3{
	@include col(3);
}

.col-xs-4{
	@include col(4);
}

.col-xs-5{
	@include col(5);
}

.col-xs-6{
	@include col(6);
}

.col-xs-7{
	@include col(7);
}

.col-xs-8{
	@include col(8);
}

.col-xs-9{
	@include col(9);
}

.col-xs-10{
	@include col(10);
}

.col-xs-11{
	@include col(11);
}

.col-xs-12{
	@include col(12);
}

.col-xs-offset-1{
	@include mrg(1);
}

.col-xs-offset-2{
	@include mrg(2);
}

.col-xs-offset-3{
	@include mrg(3);
}

.col-xs-offset-4{
	@include mrg(4);
}

.col-xs-offset-5{
	@include mrg(5);
}

.col-xs-offset-6{
	@include mrg(6);
}

.col-xs-offset-7{
	@include mrg(7);
}

.col-xs-offset-8{
	@include mrg(8);
}

.col-xs-offset-9{
	@include mrg(9);
}

.col-xs-offset-10{
	@include mrg(10);
}

.col-xs-offset-11{
	@include mrg(11);
}

.col-xs-offset-12{
	@include mrg(12);
}

@include breakpoint(min, 2) {
	.col-ph-1{
		@include col(1);
	}

	.col-ph-2{
		@include col(2);
	}

	.col-ph-3{
		@include col(3);
	}

	.col-ph-4{
		@include col(4);
	}

	.col-ph-5{
		@include col(5);
	}

	.col-ph-6{
		@include col(6);
	}

	.col-ph-7{
		@include col(7);
	}

	.col-ph-8{
		@include col(8);
	}

	.col-ph-9{
		@include col(9);
	}

	.col-ph-10{
		@include col(10);
	}

	.col-ph-11{
		@include col(11);
	}

	.col-ph-12{
		@include col(12);
	}

	.col-ph-offset-1{
		@include mrg(1);
	}

	.col-ph-offset-2{
		@include mrg(2);
	}

	.col-ph-offset-3{
		@include mrg(3);
	}

	.col-ph-offset-4{
		@include mrg(4);
	}

	.col-ph-offset-5{
		@include mrg(5);
	}

	.col-ph-offset-6{
		@include mrg(6);
	}

	.col-ph-offset-7{
		@include mrg(7);
	}

	.col-ph-offset-8{
		@include mrg(8);
	}

	.col-ph-offset-9{
		@include mrg(9);
	}

	.col-ph-offset-10{
		@include mrg(10);
	}

	.col-ph-offset-11{
		@include mrg(11);
	}

	.col-ph-offset-12{
		@include mrg(12);
	}
}

@include breakpoint(min, 3) {
	.col-sm-1{
		@include col(1);
	}

	.col-sm-2{
		@include col(2);
	}

	.col-sm-3{
		@include col(3);
	}

	.col-sm-4{
		@include col(4);
	}

	.col-sm-5{
		@include col(5);
	}

	.col-sm-6{
		@include col(6);
	}

	.col-sm-7{
		@include col(7);
	}

	.col-sm-8{
		@include col(8);
	}

	.col-sm-9{
		@include col(9);
	}

	.col-sm-10{
		@include col(10);
	}

	.col-sm-11{
		@include col(11);
	}

	.col-sm-12{
		@include col(12);
	}

	.col-sm-offset-1{
		@include mrg(1);
	}

	.col-sm-offset-2{
		@include mrg(2);
	}

	.col-sm-offset-3{
		@include mrg(3);
	}

	.col-sm-offset-4{
		@include mrg(4);
	}

	.col-sm-offset-5{
		@include mrg(5);
	}

	.col-sm-offset-6{
		@include mrg(6);
	}

	.col-sm-offset-7{
		@include mrg(7);
	}

	.col-sm-offset-8{
		@include mrg(8);
	}

	.col-sm-offset-9{
		@include mrg(9);
	}

	.col-sm-offset-10{
		@include mrg(10);
	}

	.col-sm-offset-11{
		@include mrg(11);
	}

	.col-sm-offset-12{
		@include mrg(12);
	}
}

@include breakpoint(min, 4) {
	.col-md-1{
		@include col(1);
	}

	.col-md-2{
		@include col(2);
	}

	.col-md-3{
		@include col(3);
	}

	.col-md-4{
		@include col(4);
	}

	.col-md-5{
		@include col(5);
	}

	.col-md-6{
		@include col(6);
	}

	.col-md-7{
		@include col(7);
	}

	.col-md-8{
		@include col(8);
	}

	.col-md-9{
		@include col(9);
	}

	.col-md-10{
		@include col(10);
	}

	.col-md-11{
		@include col(11);
	}

	.col-md-12{
		@include col(12);
	}

	.col-md-offset-1{
		@include mrg(1);
	}

	.col-md-offset-2{
		@include mrg(2);
	}

	.col-md-offset-3{
		@include mrg(3);
	}

	.col-md-offset-4{
		@include mrg(4);
	}

	.col-md-offset-5{
		@include mrg(5);
	}

	.col-md-offset-6{
		@include mrg(6);
	}

	.col-md-offset-7{
		@include mrg(7);
	}

	.col-md-offset-8{
		@include mrg(8);
	}

	.col-md-offset-9{
		@include mrg(9);
	}

	.col-md-offset-10{
		@include mrg(10);
	}

	.col-md-offset-11{
		@include mrg(11);
	}

	.col-md-offset-12{
		@include mrg(12);
	}
}

@include breakpoint(min, 5) {
	.col-lg-1{
		@include col(1);
	}

	.col-lg-2{
		@include col(2);
	}

	.col-lg-3{
		@include col(3);
	}

	.col-lg-4{
		@include col(4);
	}

	.col-lg-5{
		@include col(5);
	}

	.col-lg-6{
		@include col(6);
	}

	.col-lg-7{
		@include col(7);
	}

	.col-lg-8{
		@include col(8);
	}

	.col-lg-9{
		@include col(9);
	}

	.col-lg-10{
		@include col(10);
	}

	.col-lg-11{
		@include col(11);
	}

	.col-lg-12{
		@include col(12);
	}

	.col-lg-offset-1{
		@include mrg(1);
	}

	.col-lg-offset-2{
		@include mrg(2);
	}

	.col-lg-offset-3{
		@include mrg(3);
	}

	.col-lg-offset-4{
		@include mrg(4);
	}

	.col-lg-offset-5{
		@include mrg(5);
	}

	.col-lg-offset-6{
		@include mrg(6);
	}

	.col-lg-offset-7{
		@include mrg(7);
	}

	.col-lg-offset-8{
		@include mrg(8);
	}

	.col-lg-offset-9{
		@include mrg(9);
	}

	.col-lg-offset-10{
		@include mrg(10);
	}

	.col-lg-offset-11{
		@include mrg(11);
	}

	.col-lg-offset-12{
		@include mrg(12);
	}
}

@include breakpoint(min, 6) {
	.col-hd-1{
		@include col(1);
	}

	.col-hd-2{
		@include col(2);
	}

	.col-hd-3{
		@include col(3);
	}

	.col-hd-4{
		@include col(4);
	}

	.col-hd-5{
		@include col(5);
	}

	.col-hd-6{
		@include col(6);
	}

	.col-hd-7{
		@include col(7);
	}

	.col-hd-8{
		@include col(8);
	}

	.col-hd-9{
		@include col(9);
	}

	.col-hd-10{
		@include col(10);
	}

	.col-hd-11{
		@include col(11);
	}

	.col-hd-12{
		@include col(12);
	}

	.col-hd-offset-1{
		@include mrg(1);
	}

	.col-hd-offset-2{
		@include mrg(2);
	}

	.col-hd-offset-3{
		@include mrg(3);
	}

	.col-hd-offset-4{
		@include mrg(4);
	}

	.col-hd-offset-5{
		@include mrg(5);
	}

	.col-hd-offset-6{
		@include mrg(6);
	}

	.col-hd-offset-7{
		@include mrg(7);
	}

	.col-hd-offset-8{
		@include mrg(8);
	}

	.col-hd-offset-9{
		@include mrg(9);
	}

	.col-hd-offset-10{
		@include mrg(10);
	}

	.col-hd-offset-11{
		@include mrg(11);
	}

	.col-hd-offset-12{
		@include mrg(12);
	}
}



@include breakpoint(min, 7) {
	.col-qd-1{
		@include col(1);
	}

	.col-qd-2{
		@include col(2);
	}

	.col-qd-3{
		@include col(3);
	}

	.col-qd-4{
		@include col(4);
	}

	.col-qd-5{
		@include col(5);
	}

	.col-qd-6{
		@include col(6);
	}

	.col-qd-7{
		@include col(7);
	}

	.col-qd-8{
		@include col(8);
	}

	.col-qd-9{
		@include col(9);
	}

	.col-qd-10{
		@include col(10);
	}

	.col-qd-11{
		@include col(11);
	}

	.col-qd-12{
		@include col(12);
	}

	.col-qd-offset-1{
		@include mrg(1);
	}

	.col-qd-offset-2{
		@include mrg(2);
	}

	.col-qd-offset-3{
		@include mrg(3);
	}

	.col-qd-offset-4{
		@include mrg(4);
	}

	.col-qd-offset-5{
		@include mrg(5);
	}

	.col-qd-offset-6{
		@include mrg(6);
	}

	.col-qd-offset-7{
		@include mrg(7);
	}

	.col-qd-offset-8{
		@include mrg(8);
	}

	.col-qd-offset-9{
		@include mrg(9);
	}

	.col-qd-offset-10{
		@include mrg(10);
	}

	.col-qd-offset-11{
		@include mrg(11);
	}

	.col-qd-offset-12{
		@include mrg(12);
	}
}

.clearfix:before,
.clearfix:after,
.container:before,
.container:after,
.container-fluid:before,
.container-fluid:after,
.row:before,
.row:after {
  content: " ";
  display: table;
}
.clearfix:after,
.container:after,
.container-fluid:after,
.row:after {
  clear: both;
}
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.hidden {
  display: none !important;
}
.affix {
  position: fixed;
}