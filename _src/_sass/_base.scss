@mixin zoom($attr, $v, $pr: false)
{
	//set multipliers
	@include upScale($attr, zoomFactor(1, $v), zoomFactor(2, $v), zoomFactor(3, $v), zoomFactor(4, $v), zoomFactor(5, $v), zoomFactor(6, $v), zoomFactor(7, $v), $pr);
}

@function zoomFactor($bp, $v){
	@if $bp == 1 {
		@return $v * $zf1;
	}
	@else if $bp == 2 {
		@return $v * $zf2;
	}
	@else if $bp == 3 {
		@return $v * $zf3;
	}
	@else if $bp == 4 {
		@return $v * $zf4;
	}
	@else if $bp == 5 {
		@return $v * $zf5;
	}
	@else if $bp == 6 {
		@return $v * $zf6;
	}
	@else if $bp == 7 {
		@return $v * $zf7;
	}
	@else {
		@return $v;
	}
}

@mixin button ($gap, $labelFamily, $labelType, $fg, $bg) {
	@include transition(all);
	@include duration(0.6s);
	@include timing(snap);
	display: inline-block;
	@include type($labelFamily, $labelType);
	line-height: 2.5;
	padding-left: $gap;
	padding-right: $gap;
	text-transform: uppercase;
	border: 1px solid $fg;
	color: $fg;
	cursor: pointer;
	background: $bg;

	@content;
}

@mixin dimensions($width, $height: false){
	@if $height == false{
		width: $width;
		height: $width;
	}
	@else{
		width: $width;
		height: $height;
	}
}

@mixin position($x, $y, $reversex: false, $reversey: false){
	@if $reversex == false {
		left: $x;
	}
	@else {
		right: $x;
	}

	@if $reversey == false {
		top: $y;
	}
	@else {
		bottom: $y;
	}
}

@mixin reposition($x, $y) {
	@include prefix(transform, translate($x, $y));
}

@mixin print{
	@media print { 
		@content;
	}
}

@mixin screen($min: false, $max: false){
	@if $min == false and $max != false{
		@media only screen and (max-width: $max) {
			@content;
		}
	}
	@else if $min != false and $max == false{
		@media only screen and (min-width: $min) {
			@content;
		}
	}
	@else if $min != false and $max != false{
		@media only screen and (min-width: $min) and (max-width: $max) {
			@content;
		}
	}
}

@mixin aspectratio($minmax, $ratio) {
	@media screen and ($minmax+'-aspect-ratio': $ratio) {
		@content;
	}
}

@mixin orientation($o) {
	@media screen and (orientation: $orientation) {
		@content;
	}
}

@mixin hide($bp...) {
	@each $break in $bp{
		@if $break > 0 and $break < 8 {
			@include only($break) {
				display: none;
			}
		}
	}
}

@mixin upScale($property, $bp1: false, $bp2: false, $bp3: false, $bp4: false, $bp5: false, $bp6: false, $bp7: false, $prefix: false){
	//going up
	@if $bp1 != false {
		@include min(1) {
			@if $prefix != false{
				-webkit-#{$property} : $bp1;
				-moz-#{$property} : $bp1;
				-o-#{$property} : $bp1;
				-ms-#{$property} : $bp1;
			}
			#{$property} : $bp1;
		}
	}

	@if $bp2 != false {
		@include min(2) {
			@if $prefix != false{
				-webkit-#{$property} : $bp2;
				-moz-#{$property} : $bp2;
				-o-#{$property} : $bp2;
				-ms-#{$property} : $bp2;
			}
			#{$property} : $bp2;
		}
	}

	@if $bp3 != false {
		@include min(3) {
			@if $prefix != false{
				-webkit-#{$property} : $bp3;
				-moz-#{$property} : $bp3;
				-o-#{$property} : $bp3;
				-ms-#{$property} : $bp3;
			}
			#{$property} : $bp3;
		}
	}

	@if $bp4 != false {
		@include min(4) {
			@if $prefix != false{
				-webkit-#{$property} : $bp4;
				-moz-#{$property} : $bp4;
				-o-#{$property} : $bp4;
				-ms-#{$property} : $bp4;
			}
			#{$property} : $bp4;
		}
	}

	@if $bp5 != false {
		@include min(5) {
			@if $prefix != false{
				-webkit-#{$property} : $bp5;
				-moz-#{$property} : $bp5;
				-o-#{$property} : $bp5;
				-ms-#{$property} : $bp5;
			}
			#{$property} : $bp5;
		}
	}

	@if $bp6 != false {
		@include min(6) {
			@if $prefix != false{
				-webkit-#{$property} : $bp6;
				-moz-#{$property} : $bp6;
				-o-#{$property} : $bp6;
				-ms-#{$property} : $bp6;
			}
			#{$property} : $bp6;
		}
	}

	@if $bp7 != false {
		@include min(7) {
			@if $prefix != false{
				-webkit-#{$property} : $bp7;
				-moz-#{$property} : $bp7;
				-o-#{$property} : $bp7;
				-ms-#{$property} : $bp7;
			}
			#{$property} : $bp7;
		}
	}
}

@mixin downScale($property, $bp7: false, $bp6: false, $bp5: false, $bp4: false, $bp3: false, $bp2: false, $bp1: false, $prefix: false){
	//going down

	@if $bp7 != false {
		@include max(7) {
			@if $prefix != false{
				-webkit-#{$property} : $bp7;
				-moz-#{$property} : $bp7;
				-o-#{$property} : $bp7;
				-ms-#{$property} : $bp7;
			}
			#{$property} : $bp7;
		}
	}

	@if $bp6 != false {
		@include max(6) {
			@if $prefix != false{
				-webkit-#{$property} : $bp6;
				-moz-#{$property} : $bp6;
				-o-#{$property} : $bp6;
				-ms-#{$property} : $bp6;
			}
			#{$property} : $bp6;
		}
	}

	@if $bp5 != false {
		@include max(5) {
			@if $prefix != false{
				-webkit-#{$property} : $bp5;
				-moz-#{$property} : $bp5;
				-o-#{$property} : $bp5;
				-ms-#{$property} : $bp5;
			}
			#{$property} : $bp5;
		}
	}

	@if $bp4 != false {
		@include max(4) {
			@if $prefix != false{
				-webkit-#{$property} : $bp4;
				-moz-#{$property} : $bp4;
				-o-#{$property} : $bp4;
				-ms-#{$property} : $bp4;
			}
			#{$property} : $bp4;
		}
	}

	@if $bp3 != false {
		@include max(3) {
			@if $prefix != false{
				-webkit-#{$property} : $bp3;
				-moz-#{$property} : $bp3;
				-o-#{$property} : $bp3;
				-ms-#{$property} : $bp3;
			}
			#{$property} : $bp3;
		}
	}

	@if $bp2 != false {
		@include max(2) {
			@if $prefix != false{
				-webkit-#{$property} : $bp2;
				-moz-#{$property} : $bp2;
				-o-#{$property} : $bp2;
				-ms-#{$property} : $bp2;
			}
			#{$property} : $bp2;
		}
	}

	@if $bp1 != false {
		@include max(1) {
			@if $prefix != false{
				-webkit-#{$property} : $bp1;
				-moz-#{$property} : $bp1;
				-o-#{$property} : $bp1;
				-ms-#{$property} : $bp1;
			}
			#{$property} : $bp1;
		}
	}
}

@mixin mScrollFix{
	@content;
	-webkit-overflow-scrolling: touch;
}

@mixin clearFix{
	&::after{
		content: '';
		width: 100%;
		height: 0;
		display: block;
		clear: both;
	}
}

@mixin prefix($property, $value)
{
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-o-#{$property}: $value;
	-ms-#{$property}: $value;
	#{$property}: $value;
}

@mixin calc-vh($property, $value){
	#{$property} : $value+vh;
	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:portrait){
		#{$property}: ($value/100) * 1024px;
	}

	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:landscape){
		#{$property}: ($value/100) * 768px;
	}
	
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:portrait){
		#{$property}: ($value/100) * 480px;
	}

	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:landscape){
		#{$property}: ($value/100) * 320px;
	}
	
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:portrait){
		#{$property}: ($value/100) * 568px;
	}

	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:landscape){
		#{$property}: ($value/100) * 320px;
	}
	
	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:portrait){
		#{$property}: ($value/100) * 667px;
	}

	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:landscape){
		#{$property}: ($value/100) * 375px;
	}
}

@mixin calc-vw($property, $value){
	#{$property} : $value+vw;
	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:portrait){
		#{$property}: ($value/100) * 768px;
	}

	@media all and (device-width: 1024px) and (device-height: 768px) and (orientation:landscape){
		#{$property}: ($value/100) * 1024px;
	}
	
	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:portrait){
		#{$property}: ($value/100) * 320px;
	}

	@media all and (device-width: 320px) and (device-height: 480px) and (orientation:landscape){
		#{$property}: ($value/100) * 480px;
	}
	
	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:portrait){
		#{$property}: ($value/100) * 320px;
	}

	@media all and (device-width: 320px) and (device-height: 568px) and (orientation:landscape){
		#{$property}: ($value/100) * 568px;
	}
	
	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:portrait){
		#{$property}: ($value/100) * 375px;
	}

	@media all and (device-width: 375px) and (device-height: 667px) and (orientation:landscape){
		#{$property}: ($value/100) * 667px;
	}
}

@mixin transition($what...)
{
	-webkit-transform: translateZ(0);
	-moz-transform: translateZ(0);
	-ms-transform: translateZ(0);
	-o-transform: translateZ(0);
	transform: translateZ(0);

	-webkit-backface-visibility: hidden;
	-moz-backface-visibility: hidden;
	-ms-backface-visibility: hidden;
	backface-visibility: hidden;

	-webkit-perspective: 1000;
	-moz-perspective: 1000;
	-ms-perspective: 1000;
	perspective: 1000;

  @if $what == 'auto' {
	-moz-transition-property : all;
	-webkit-transition-property : all;
	-o-transition-property : all;
	-ms-transition-property : all;
	transition-property : all;
} @else {
	-moz-transition-property : $what;
	-webkit-transition-property : $what;
	-o-transition-property : $what;
	-ms-transition-property : $what;
	transition-property : $what;
	}
}

@mixin transition_unfixed($what...)
{
   -webkit-backface-visibility: hidden;
   -moz-backface-visibility: hidden;
   -ms-backface-visibility: hidden;
   backface-visibility: hidden;

   -webkit-perspective: 1000;
   -moz-perspective: 1000;
   -ms-perspective: 1000;
   perspective: 1000;

  @if $what == 'auto' {
    
    -moz-transition-property : all;
    -webkit-transition-property : all;
    -o-transition-property : all;
    -ms-transition-property : all;
    transition-property : all;

   } @else {
   
    -moz-transition-property : $what;
    -webkit-transition-property : $what;
    -o-transition-property : $what;
    -ms-transition-property : $what;
    transition-property : $what;
   }
}

@mixin duration($what)
{
  -moz-transition-duration : $what;
  -webkit-transition-duration : $what;
  -o-transition-duration : $what;
  -ms-transition-duration : $what;
  transition-duration : $what;
}

@mixin timing($what)
{
  -moz-transition-timing-function : curve($what);
  -webkit-transition-timing-function : curve($what);
  -o-transition-timing-function : curve($what);
  -ms-transition-timing-function : curve($what);
  transition-timing-function : curve($what);
}

@function curve($what){
  @if $what == 'snap'{
    @return cubic-bezier(0.000, 0.700, 0.285, 1.000)
  }
  @else if $what == 'sine'{
    @return cubic-bezier(0.39, 0.575, 0.565, 1)
  }
  @else if $what == 'bounce'{
    @return cubic-bezier(0.050, 0.385, 0.000, 1.220)
  }
  @else if $what == 'fall'{
    @return cubic-bezier(0.630, 0.040, 0.835, 0.560)
  }
  @else{
    @return $what
  }
}

@mixin animate($k_frames, $duration, $timing, $iterations: infinite, $direction: normal, $delay: false) {
  @include prefix(animation-name, $k_frames);
  @include prefix(animation-duration, $duration);
  @include prefix(animation-timing-function, curve($timing));
  @include prefix(animation-iteration-count, $iterations);
  @include prefix(animation-direction, $direction);

  @if $delay != false{
    @include prefix(animation-delay, $delay);
  }
}

@mixin keyframes($name) {
  @-moz-keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-o-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

@mixin col($n){
	width: ($n/12) * 100%;
}

@mixin mrg($n){
	margin-left: ($n/12) * 100%;
}

@mixin rmrg($n){
	margin-right: ($n/12) * 100%;
}